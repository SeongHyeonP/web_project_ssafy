{"remainingRequest":"C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\node_modules\\babel-loader\\lib\\index.js!C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\src\\store\\modules\\memberStore.js","dependencies":[{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\src\\store\\modules\\memberStore.js","mtime":1637686276503},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\babel.config.js","mtime":1637686272690},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637686167762},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\node_modules\\babel-loader\\lib\\index.js","mtime":1637686294041},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy-2\\web_project_ssafy\\web_ssafy\\node_modules\\eslint-loader\\index.js","mtime":1637686232657}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1NTQUZZL0ZpbmFsUEpUL3dlYl9wcm9qZWN0X3NzYWZ5LTIvd2ViX3Byb2plY3Rfc3NhZnkvd2ViX3NzYWZ5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgand0X2RlY29kZSBmcm9tICJqd3QtZGVjb2RlIjsKaW1wb3J0IHsgbG9naW4gfSBmcm9tICJAL2FwaS9tZW1iZXIuanMiOwppbXBvcnQgeyBmaW5kQnlJZCB9IGZyb20gIi4uLy4uL2FwaS9tZW1iZXIiOwp2YXIgbWVtYmVyU3RvcmUgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgaXNMb2dpbjogZmFsc2UsCiAgICBpc0xvZ2luRXJyb3I6IGZhbHNlLAogICAgdXNlckluZm86IG51bGwKICB9LAogIGdldHRlcnM6IHsKICAgIGNoZWNrVXNlckluZm86IGZ1bmN0aW9uIGNoZWNrVXNlckluZm8oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXJJbmZvOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfSVNfTE9HSU46IGZ1bmN0aW9uIFNFVF9JU19MT0dJTihzdGF0ZSwgaXNMb2dpbikgewogICAgICBzdGF0ZS5pc0xvZ2luID0gaXNMb2dpbjsKICAgIH0sCiAgICBTRVRfSVNfTE9HSU5fRVJST1I6IGZ1bmN0aW9uIFNFVF9JU19MT0dJTl9FUlJPUihzdGF0ZSwgaXNMb2dpbkVycm9yKSB7CiAgICAgIHN0YXRlLmlzTG9naW5FcnJvciA9IGlzTG9naW5FcnJvcjsKICAgIH0sCiAgICBTRVRfVVNFUl9JTkZPOiBmdW5jdGlvbiBTRVRfVVNFUl9JTkZPKHN0YXRlLCB1c2VySW5mbykgewogICAgICBzdGF0ZS5pc0xvZ2luID0gdHJ1ZTsKICAgICAgc3RhdGUudXNlckluZm8gPSB1c2VySW5mbzsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHVzZXJDb25maXJtOiBmdW5jdGlvbiB1c2VyQ29uZmlybShfcmVmLCB1c2VyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGxvZ2luKHVzZXIsIGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlID09PSAic3VjY2VzcyIpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdG9rZW4gPSByZXNwb25zZS5kYXRhWyJhY2Nlc3MtdG9rZW4iXTsKICAgICAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9JU19MT0dJTiIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgIGNvbW1pdCgiU0VUX0lTX0xPR0lOX0VSUk9SIiwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oImFjY2Vzcy10b2tlbiIsIHRva2VuKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9JU19MT0dJTiIsIGZhbHNlKTsKICAgICAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9JU19MT0dJTl9FUlJPUiIsIHRydWUpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7fSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRVc2VySW5mbzogZnVuY3Rpb24gZ2V0VXNlckluZm8oX3JlZjIsIHRva2VuKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIHZhciBkZWNvZGVfdG9rZW4gPSBqd3RfZGVjb2RlKHRva2VuKTsKICAgICAgZmluZEJ5SWQoZGVjb2RlX3Rva2VuLnVzZXJpZCwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZSA9PT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICBjb21taXQoIlNFVF9VU0VSX0lORk8iLCByZXNwb25zZS5kYXRhLnVzZXJJbmZvKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coIuycoOyggCDsoJXrs7Qg7JeG7J2MISEiKTsKICAgICAgICB9CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBtZW1iZXJTdG9yZTs="},{"version":3,"sources":["C:/SSAFY/FinalPJT/web_project_ssafy-2/web_project_ssafy/web_ssafy/src/store/modules/memberStore.js"],"names":["jwt_decode","login","findById","memberStore","namespaced","state","isLogin","isLoginError","userInfo","getters","checkUserInfo","mutations","SET_IS_LOGIN","SET_IS_LOGIN_ERROR","SET_USER_INFO","actions","userConfirm","user","commit","response","data","message","token","sessionStorage","setItem","getUserInfo","decode_token","userid","console","log","error"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,YAAY,EAAE,KAFT;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GAFW;AAOlBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE,uBAAUL,KAAV,EAAiB;AAC9B,aAAOA,KAAK,CAACG,QAAb;AACD;AAHM,GAPS;AAYlBG,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE,sBAACP,KAAD,EAAQC,OAAR,EAAoB;AAChCD,MAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AACD,KAHQ;AAITO,IAAAA,kBAAkB,EAAE,4BAACR,KAAD,EAAQE,YAAR,EAAyB;AAC3CF,MAAAA,KAAK,CAACE,YAAN,GAAqBA,YAArB;AACD,KANQ;AAOTO,IAAAA,aAAa,EAAE,uBAACT,KAAD,EAAQG,QAAR,EAAqB;AAClCH,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACAD,MAAAA,KAAK,CAACG,QAAN,GAAiBA,QAAjB;AACD;AAVQ,GAZO;AAwBlBO,EAAAA,OAAO,EAAE;AACDC,IAAAA,WADC,6BACuBC,IADvB,EAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,gBAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,uBAC5BjB,KAAK,CACTgB,IADS,EAET,UAACE,QAAD,EAAc;AACZ,sBAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,SAA9B,EAAyC;AACvC,wBAAIC,KAAK,GAAGH,QAAQ,CAACC,IAAT,CAAc,cAAd,CAAZ;AACAF,oBAAAA,MAAM,CAAC,cAAD,EAAiB,IAAjB,CAAN;AACAA,oBAAAA,MAAM,CAAC,oBAAD,EAAuB,KAAvB,CAAN;AACAK,oBAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCF,KAAvC;AACD,mBALD,MAKO;AACLJ,oBAAAA,MAAM,CAAC,cAAD,EAAiB,KAAjB,CAAN;AACAA,oBAAAA,MAAM,CAAC,oBAAD,EAAuB,IAAvB,CAAN;AACD;AACF,iBAZQ,EAaT,YAAM,CAAE,CAbC,CADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBnC,KAjBM;AAkBPO,IAAAA,WAlBO,8BAkBiBH,KAlBjB,EAkBwB;AAAA,UAAjBJ,MAAiB,SAAjBA,MAAiB;AAC7B,UAAIQ,YAAY,GAAG1B,UAAU,CAACsB,KAAD,CAA7B;AACApB,MAAAA,QAAQ,CACNwB,YAAY,CAACC,MADP,EAEN,UAACR,QAAD,EAAc;AACZ,YAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,SAA9B,EAAyC;AACvCH,UAAAA,MAAM,CAAC,eAAD,EAAkBC,QAAQ,CAACC,IAAT,CAAcZ,QAAhC,CAAN;AACD,SAFD,MAEO;AACLoB,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF,OARK,EASN,UAACC,KAAD,EAAW;AACTF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,OAXK,CAAR;AAaD;AAjCM;AAxBS,CAApB;AA6DA,eAAe3B,WAAf","sourcesContent":["import jwt_decode from \"jwt-decode\";\r\nimport { login } from \"@/api/member.js\";\r\nimport { findById } from \"../../api/member\";\r\n\r\nconst memberStore = {\r\n  namespaced: true,\r\n  state: {\r\n    isLogin: false,\r\n    isLoginError: false,\r\n    userInfo: null,\r\n  },\r\n  getters: {\r\n    checkUserInfo: function (state) {\r\n      return state.userInfo;\r\n    },\r\n  },\r\n  mutations: {\r\n    SET_IS_LOGIN: (state, isLogin) => {\r\n      state.isLogin = isLogin;\r\n    },\r\n    SET_IS_LOGIN_ERROR: (state, isLoginError) => {\r\n      state.isLoginError = isLoginError;\r\n    },\r\n    SET_USER_INFO: (state, userInfo) => {\r\n      state.isLogin = true;\r\n      state.userInfo = userInfo;\r\n    },\r\n  },\r\n  actions: {\r\n    async userConfirm({ commit }, user) {\r\n      await login(\r\n        user,\r\n        (response) => {\r\n          if (response.data.message === \"success\") {\r\n            let token = response.data[\"access-token\"];\r\n            commit(\"SET_IS_LOGIN\", true);\r\n            commit(\"SET_IS_LOGIN_ERROR\", false);\r\n            sessionStorage.setItem(\"access-token\", token);\r\n          } else {\r\n            commit(\"SET_IS_LOGIN\", false);\r\n            commit(\"SET_IS_LOGIN_ERROR\", true);\r\n          }\r\n        },\r\n        () => {}\r\n      );\r\n    },\r\n    getUserInfo({ commit }, token) {\r\n      let decode_token = jwt_decode(token);\r\n      findById(\r\n        decode_token.userid,\r\n        (response) => {\r\n          if (response.data.message === \"success\") {\r\n            commit(\"SET_USER_INFO\", response.data.userInfo);\r\n          } else {\r\n            console.log(\"유저 정보 없음!!\");\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n\r\nexport default memberStore;\r\n"]}]}