{"remainingRequest":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\src\\components\\house\\KakaoMap.vue?vue&type=style&index=0&id=7c060c50&scoped=true&lang=css&","dependencies":[{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\src\\components\\house\\KakaoMap.vue","mtime":1637646281752},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\node_modules\\css-loader\\dist\\cjs.js","mtime":1637484084796},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1637484133994},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\node_modules\\postcss-loader\\src\\index.js","mtime":1637484114084},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637484063101},{"path":"C:\\SSAFY\\FinalPJT\\web_project_ssafy\\web_ssafy\\node_modules\\vue-loader\\lib\\index.js","mtime":1637484133978}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI21hcCB7DQogIHdpZHRoOiA0MDBweDsNCiAgaGVpZ2h0OiA0MDBweDsNCn0NCg0KLmJ1dHRvbi1ncm91cCB7DQogIG1hcmdpbjogMTBweCAwcHg7DQp9DQoNCmJ1dHRvbiB7DQogIG1hcmdpbjogMCAzcHg7DQp9DQo="},{"version":3,"sources":["KakaoMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"KakaoMap.vue","sourceRoot":"src/components/house","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nconst houseStore = \"houseStore\";\r\n\r\nexport default {\r\n  name: \"KakaoMap\",\r\n  data() {\r\n    return {\r\n      map: null,\r\n      markerPositions1: [\r\n        [33.452278, 126.567803],\r\n        [33.452671, 126.574792],\r\n        [33.451744, 126.572441],\r\n      ],\r\n      markerPositions2: [\r\n        [37.499590490909185, 127.0263723554437],\r\n        [37.499427948430814, 127.02794423197847],\r\n        [37.498553760499505, 127.02882598822454],\r\n        [37.497625593121384, 127.02935713582038],\r\n        [37.49629291770947, 127.02587362608637],\r\n        [37.49754540521486, 127.02546694890695],\r\n        [37.49646391248451, 127.02675574250912],\r\n      ],\r\n      markers: [],\r\n      infowindow: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 5,\r\n      };\r\n      this.map = new kakao.maps.Map(container, options);\r\n    },\r\n    changeSize(size) {\r\n      const container = document.getElementById(\"map\");\r\n      container.style.width = `${size}px`;\r\n      container.style.height = `${size}px`;\r\n      this.map.relayout();\r\n    },\r\n    displayMarker(markerPositions) {\r\n      if (this.markers.length > 0) {\r\n        this.markers.forEach((marker) => marker.setMap(null));\r\n      }\r\n\r\n      const positions = markerPositions.map(\r\n        (position) => new kakao.maps.LatLng(...position)\r\n      );\r\n\r\n      if (positions.length > 0) {\r\n        this.markers = positions.map(\r\n          (position) =>\r\n            new kakao.maps.Marker({\r\n              map: this.map,\r\n              position,\r\n            })\r\n        );\r\n\r\n        const bounds = positions.reduce(\r\n          (bounds, latlng) => bounds.extend(latlng),\r\n          new kakao.maps.LatLngBounds()\r\n        );\r\n\r\n        this.map.setBounds(bounds);\r\n      }\r\n    },\r\n    displayInfoWindow() {\r\n      if (this.infowindow && this.infowindow.getMap()) {\r\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\r\n        this.map.setCenter(this.infowindow.getPosition());\r\n        return;\r\n      }\r\n\r\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n        iwPosition = new kakao.maps.LatLng(33.450701, 126.570667), //인포윈도우 표시 위치입니다\r\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n\r\n      this.infowindow = new kakao.maps.InfoWindow({\r\n        map: this.map, // 인포윈도우가 표시될 지도\r\n        position: iwPosition,\r\n        content: iwContent,\r\n        removable: iwRemoveable,\r\n      });\r\n\r\n      this.map.setCenter(iwPosition);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>\r\n"]}]}