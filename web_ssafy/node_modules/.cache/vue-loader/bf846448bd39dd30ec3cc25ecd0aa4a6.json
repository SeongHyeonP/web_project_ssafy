{"remainingRequest":"C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\src\\components\\house\\HouseSearchBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\src\\components\\house\\HouseSearchBar.vue","mtime":1637759077605},{"path":"C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\psh\\Desktop\\ssafy\\dailyproject\\vue\\t\\web_project_ssafy\\web_ssafy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucywgbWFwTXV0YXRpb25zIH0gZnJvbSAidnVleCI7DQppbXBvcnQgSG9zcGl0YWxMaXN0IGZyb20gIkAvY29tcG9uZW50cy9ob3NwaXRhbC9Ib3NwaXRhbExpc3QudnVlIjsNCi8vIGltcG9ydCBIb3VzZU1hcCBmcm9tICJAL2NvbXBvbmVudHMvaG91c2UvSG91c2VNYXAudnVlIjsNCmltcG9ydCBIb3VzZUxpc3QgZnJvbSAiQC9jb21wb25lbnRzL2hvdXNlL0hvdXNlTGlzdC52dWUiOw0KaW1wb3J0IEhvdXNlRGV0YWlsIGZyb20gIkAvY29tcG9uZW50cy9ob3VzZS9Ib3VzZURldGFpbC52dWUiOw0KaW1wb3J0IHsgaG91c2VMaXN0IH0gZnJvbSAiQC9hcGkvaG91c2UuanMiOw0KDQovKg0KICBuYW1lc3BhY2VkOiB0cnVl66W8IOyCrOyaqe2WiOq4sCDrlYzrrLjsl5Ag7ISg7Ja47ZW07KSN64uI64ukLg0KICBpbmRleC5qcyDsl5DshJwgbW9kdWxlcyDqsJ3ssrTsnZggJ+2CpCcg7J2066aE7J6F64uI64ukLg0KDQogIG1vZHVsZXM6IHsNCiAgICDtgqQ6IOqwkg0KICAgIG1lbWJlclN0b3JlOiBtZW1iZXJTdG9yZSwNCiAgICBob3VzZVN0b3JlOiBob3VzZVN0b3JlDQogIH0gIA0KKi8NCmNvbnN0IGhvdXNlU3RvcmUgPSAiaG91c2VTdG9yZSI7DQp2YXIgbWFwOw0KLy92YXIgbWFya2VyOw0KLy92YXIgbWFya2VycyA9IFtdOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJIb3VzZVNlYXJjaEJhciIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBIb3NwaXRhbExpc3QsDQogICAgLy8gSG91c2VNYXAsDQogICAgSG91c2VMaXN0LA0KICAgIEhvdXNlRGV0YWlsLA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBzaWRvQ29kZTogbnVsbCwNCiAgICAgIHNpZG9OYW1lOiBudWxsLA0KICAgICAgZ3VndW5Db2RlOiBudWxsLA0KICAgICAgZ3VndW5OYW1lOiBudWxsLA0KICAgICAgc2hvd0hvc3BpdGFsOiBmYWxzZSwNCiAgICAgIC8vaG91c2VzOiBbXSwNCiAgICAgIC8vZG9uZ0NvZGU6IG51bGwsDQogICAgICBtYXJrZXJzOiBbXSwNCiAgICAgIC8vIG1hcOyXkOyEnCDsk7gg7JWI7J6Q66W4IOydtOumhA0KICAgICAgc2lkb05hbWUyOiBudWxsLA0KICAgICAgLy9ndWd1bk5hbWUyOiBudWxsLA0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwU3RhdGUoaG91c2VTdG9yZSwgWyJzaWRvcyIsICJndWd1bnMiLCAiaG91c2VzIl0pLA0KICAgIC8vIHNpZG9zKCkgew0KICAgIC8vICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNpZG9zOw0KICAgIC8vIH0sDQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgLy8gdGhpcy4kc3RvcmUuZGlzcGF0Y2goImdldFNpZG8iKTsNCiAgICAvLyB0aGlzLnNpZG9MaXN0KCk7DQogICAgdGhpcy5DTEVBUl9TSURPX0xJU1QoKTsNCiAgICB0aGlzLmdldFNpZG8oKTsNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICBpZiAod2luZG93Lmtha2FvICYmIHdpbmRvdy5rYWthby5tYXBzKSB7DQogICAgICB0aGlzLmluaXRNYXAoKTsNCiAgICB9IGVsc2Ugew0KICAgICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7DQogICAgICBzY3JpcHQub25sb2FkID0gKCkgPT4ga2FrYW8ubWFwcy5sb2FkKHRoaXMuaW5pdE1hcCk7DQogICAgICBzY3JpcHQuc3JjID0NCiAgICAgICAgIi8vZGFwaS5rYWthby5jb20vdjIvbWFwcy9zZGsuanM/YXV0b2xvYWQ9ZmFsc2UmYXBwa2V5PTkxNWNmZmVkMzcyOTU0YjdiNDQ4MDRlZDQyMmI5Y2YwJmxpYnJhcmllcz1zZXJ2aWNlcyI7DQoNCiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAuLi5tYXBBY3Rpb25zKGhvdXNlU3RvcmUsIFsNCiAgICAgICJnZXRTaWRvIiwNCiAgICAgICJnZXRHdWd1biIsDQogICAgICAiZ2V0SG91c2VMaXN0IiwNCiAgICAgICJzZXRNYXJrZXIiLA0KICAgIF0pLA0KICAgIC4uLm1hcE11dGF0aW9ucyhob3VzZVN0b3JlLCBbDQogICAgICAiQ0xFQVJfU0lET19MSVNUIiwNCiAgICAgICJDTEVBUl9HVUdVTl9MSVNUIiwNCiAgICAgICJDTEVBUl9ERVRBSUxfSE9VU0UiLA0KICAgICAgIkNMRUFSX0hPVVNFX0xJU1QiLA0KICAgICAgIlNFVF9IT1VTRV9MSVNUIiwNCiAgICBdKSwNCiAgICAvLyBzaWRvTGlzdCgpIHsNCiAgICAvLyAgIHRoaXMuZ2V0U2lkbygpOw0KICAgIC8vIH0sDQogICAgZ3VndW5MaXN0KCkgew0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy5zaWRvQ29kZSk7DQogICAgICB0aGlzLkNMRUFSX0dVR1VOX0xJU1QoKTsNCiAgICAgIHRoaXMuZ3VndW5Db2RlID0gbnVsbDsNCiAgICAgIHRoaXMuZ2V0U2lkb05hbWUoKTsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2lkb05hbWUpOw0KDQogICAgICBpZiAodGhpcy5zaWRvQ29kZSkgew0KICAgICAgICB0aGlzLmdldEd1Z3VuKHRoaXMuc2lkb0NvZGUpOw0KICAgICAgfQ0KICAgIH0sDQogICAgc2VhcmNoQXB0KCkgew0KICAgICAgdGhpcy5zaG93SG9zcGl0YWwgPSBmYWxzZTsNCiAgICAgIHRoaXMuZ2V0R3VndW5OYW1lKCk7DQogICAgICBjb25zb2xlLmxvZyh0aGlzLmd1Z3VuTmFtZSk7DQoNCiAgICAgIGlmICh0aGlzLmd1Z3VuQ29kZSkgew0KICAgICAgICAvL2NvbnNvbGUubG9nKCJndWd1bkNvZGUgLT4gIiArIHRoaXMuZ3VndW5Db2RlKTsNCiAgICAgICAgdGhpcy5nZXRIb3VzZUxpc3QodGhpcy5ndWd1bkNvZGUpOw0KICAgICAgICBjb25zb2xlLmxvZygiaG91c2VzICIpOw0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmhvdXNlcyk7DQogICAgICAgIHRoaXMuZ2V0SG91c2VMaXN0MSh0aGlzLmd1Z3VuQ29kZSk7DQogICAgICB9DQogICAgfSwNCiAgICBzaG93SG9zcGl0YWxMaXN0KCkgew0KICAgICAgaWYgKHRoaXMuc2lkb05hbWUgIT0gbnVsbCAmJiB0aGlzLmd1Z3VuTmFtZSAhPSBudWxsKSB7DQogICAgICAgIHRoaXMuc2hvd0hvc3BpdGFsID0gIXRoaXMuc2hvd0hvc3BpdGFsOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgYWxlcnQoIuyngOyXreydhCDshKDtg53tlZjshLjsmpQiKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIGdldFNpZG9OYW1lKCkgew0KICAgICAgdGhpcy5zaWRvcy5mb3JFYWNoKChzaWRvKSA9PiB7DQogICAgICAgIGlmIChzaWRvLnZhbHVlID09PSB0aGlzLnNpZG9Db2RlKSB7DQogICAgICAgICAgdGhpcy5zaWRvTmFtZSA9IHNpZG8udGV4dC5zdWJzdHJpbmcoMCwgMik7DQogICAgICAgICAgdGhpcy5zaWRvTmFtZTIgPSBzaWRvLnRleHQ7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0sDQogICAgZ2V0R3VndW5OYW1lKCkgew0KICAgICAgdGhpcy5ndWd1bnMuZm9yRWFjaCgoZ3VndW4pID0+IHsNCiAgICAgICAgaWYgKGd1Z3VuLnZhbHVlID09PSB0aGlzLmd1Z3VuQ29kZSkgew0KICAgICAgICAgIHRoaXMuZ3VndW5OYW1lID0gZ3VndW4udGV4dDsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSwNCiAgICBpbml0TWFwKCkgew0KICAgICAgY29uc3QgbWFwQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hcCIpOw0KICAgICAgY29uc3QgbWFwT3B0aW9uID0gew0KICAgICAgICBjZW50ZXI6IG5ldyBrYWthby5tYXBzLkxhdExuZygzMy40NTA3MDEsIDEyNi41NzA2NjcpLA0KICAgICAgICBsZXZlbDogNSwNCiAgICAgIH07DQoNCiAgICAgIG1hcCA9IG5ldyBrYWthby5tYXBzLk1hcChtYXBDb250YWluZXIsIG1hcE9wdGlvbik7DQogICAgfSwNCiAgICBjaGFuZ2VTaXplKHNpemUpIHsNCiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYXAiKTsNCiAgICAgIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9IGAke3NpemV9cHhgOw0KICAgICAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9IGAke3NpemV9cHhgOw0KICAgICAgbWFwLnJlbGF5b3V0KCk7DQogICAgfSwNCiAgICBnZXRIb3VzZUxpc3QxKGd1Z3VuQ29kZSkgew0KICAgICAgLy8gdnVlIGNsaSBlbnZpcm9tZW50IHZhcmlhYmxlcyDqsoDsg4kNCiAgICAgIC8vLmVudi5sb2NhbCBmaWxlIOyDneyEsS4NCiAgICAgIC8vIOuwmOuTnOyLnCBWVUVfQVBQ7Jy866GcIOyLnOyeke2VtOyVvCDtlZzri6QuDQogICAgICBjb25zdCBTRVJWSUNFX0tFWSA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQVBUX0RFQUxfQVBJX0tFWTsNCiAgICAgIC8vICAgY29uc3QgU0VSVklDRV9LRVkgPQ0KICAgICAgLy8gICAgICI5WG8wdmxnbFdjT0JHVUR4SDhQUGJ1S25sQndiV1U2YU83JTJCazNGVjRiYUY5R1hvazF5eElFRiUyQkl3cjIlMkIlMkYlMkY0b1ZMVDhiZWtLVSUyQms5enRrSk8wd3NCdyUzRCUzRCI7DQogICAgICBjb25zdCBwYXJhbXMgPSB7DQogICAgICAgIExBV0RfQ0Q6IGd1Z3VuQ29kZSwNCiAgICAgICAgREVBTF9ZTUQ6ICIyMDIxMTAiLA0KICAgICAgICBzZXJ2aWNlS2V5OiBkZWNvZGVVUklDb21wb25lbnQoU0VSVklDRV9LRVkpLA0KICAgICAgICBwYWdlTm86IGVuY29kZVVSSUNvbXBvbmVudCgiMSIpLA0KICAgICAgICBudW1PZlJvd3M6IGVuY29kZVVSSUNvbXBvbmVudCgiMTAwIiksDQogICAgICB9Ow0KICAgICAgaG91c2VMaXN0KA0KICAgICAgICBwYXJhbXMsDQogICAgICAgIChyZXNwb25zZSkgPT4gew0KICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEucmVzcG9uc2UuYm9keS5pdGVtcy5pdGVtKTsNCiAgICAgICAgICB0aGlzLmhvdXNlcyA9IHJlc3BvbnNlLmRhdGEucmVzcG9uc2UuYm9keS5pdGVtcy5pdGVtOw0KICAgICAgICAgIHRoaXMuU0VUX0hPVVNFX0xJU1QodGhpcy5ob3VzZXMpOw0KICAgICAgICAgIHRoaXMuZGlzcGxheU1hcmtlcih0aGlzLmhvdXNlcyk7DQogICAgICAgIH0sDQogICAgICAgIChlcnJvcikgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsNCiAgICAgICAgfQ0KICAgICAgKTsNCiAgICB9LA0KICAgIC8v6rKA7IOJIOqysOqzvCDrqqnroZ3qs7wg66eI7Luk66W8IO2RnOy2nO2VmOuKlCDtlajsiJjsnoXri4jri6QNCiAgICBhc3luYyBkaXNwbGF5TWFya2VyKGhvdXNlcykgew0KICAgICAgLy8gaWYgKHRoaXMubWFya2Vycy5sZW5ndGggPiAwKSB7DQogICAgICAvLyAgIHRoaXMubWFya2Vycy5mb3JFYWNoKChtYXJrZXIpID0+IG1hcmtlci5zZXRNYXAobnVsbCkpOw0KICAgICAgLy8gfQ0KDQogICAgICAvLyDsp4Drj4Tsl5Ag7ZGc7Iuc65CY6rOgIOyeiOuKlCDrp4jsu6Trpbwg7KCc6rGw7ZWp64uI64ukDQogICAgICB0aGlzLnJlbW92ZU1hcmtlcigpOw0KDQogICAgICAvLyDqsoDsg4kg6rKw6rO8IOuqqeuhneydtOuCmCDrp4jsu6Trpbwg7YG066at7ZaI7J2EIOuVjCDsnqXshozrqoXsnYQg7ZGc7Lac7ZWgIOyduO2PrOyciOuPhOyasOulvCDsg53shLHtlanri4jri6QNCiAgICAgIC8vIHZhciBpbmZvd2luZG93ID0gbmV3IGtha2FvLm1hcHMuSW5mb1dpbmRvdyh7IHpJbmRleDogMSB9KTsNCg0KICAgICAgdmFyIHBvc2l0aW9ucyA9IFtdOw0KDQogICAgICBhd2FpdCBob3VzZXMuZm9yRWFjaCgoaG91c2UpID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coImZvckVhY2gtPmhvdXNlIik7DQogICAgICAgIGNvbnNvbGUubG9nKGhvdXNlKTsNCiAgICAgICAgY29uc3Qgc2lkbyA9IHRoaXMuc2lkb05hbWUyOw0KICAgICAgICAvLyBjb25zdCBzaWRvID0gdGhpcy5zaWRvTmFtZTsNCiAgICAgICAgY29uc29sZS5sb2coc2lkbyk7DQogICAgICAgIC8vY29uc3QgZ3VndW4gPSB0aGlzLmd1Z3VuTmFtZTsNCiAgICAgICAgLy9jb25zdCBkb25nID0gaG91c2Uu67KV7KCV64+ZOw0KICAgICAgICBjb25zdCBzdHJlZXQgPSBob3VzZS7rj4TroZzrqoU7DQogICAgICAgIGNvbnN0IGppYnVuID0gaG91c2Uu64+E66Gc66qF6rG066y867O467KI7Zi47L2U65OcOw0KDQogICAgICAgIGNvbnN0IGFkZHIgPSBzaWRvICsgIiAiICsgc3RyZWV0ICsgIiAiICsgamlidW47DQogICAgICAgIC8vIGNvbnN0IGFkZHIgPSBzaWRvICsgIiAiICsgZ3VndW4gKyBkb25nICsgIiAiICsgamlidW47DQogICAgICAgIC8vY29uc29sZS5sb2coYWRkcik7DQoNCiAgICAgICAgcG9zaXRpb25zLnB1c2goYWRkcik7DQogICAgICB9KTsNCg0KICAgICAgY29uc29sZS5sb2cocG9zaXRpb25zKTsNCg0KICAgICAgLy8g7KO87IaMIC0+IOyijO2RnCDrs4DtmZgg65287J2067iM65+s66asDQogICAgICB2YXIgZ2VvY29kZXIgPSBuZXcga2FrYW8ubWFwcy5zZXJ2aWNlcy5HZW9jb2RlcigpOw0KDQogICAgICBpZiAocG9zaXRpb25zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgcG9zaXRpb25zLmZvckVhY2goZnVuY3Rpb24gKGFkZHIsIGluZGV4KSB7DQogICAgICAgICAgZ2VvY29kZXIuYWRkcmVzc1NlYXJjaChhZGRyLCBmdW5jdGlvbiAocmVzdWx0LCBzdGF0dXMpIHsNCiAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzdWx0KTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXR1cyk7DQoNCiAgICAgICAgICAgIC8vIOygleyDgeyggeycvOuhnCDqsoDsg4nsnbQg7JmE66OM65CQ7Jy866m0DQogICAgICAgICAgICBpZiAoc3RhdHVzID09PSBrYWthby5tYXBzLnNlcnZpY2VzLlN0YXR1cy5PSykgew0KICAgICAgICAgICAgICB2YXIgY29vcmRzID0gbmV3IGtha2FvLm1hcHMuTGF0TG5nKHJlc3VsdFswXS55LCByZXN1bHRbMF0ueCk7DQoNCiAgICAgICAgICAgICAgdmFyIGltYWdlU3JjID0NCiAgICAgICAgICAgICAgICAiaHR0cHM6Ly90MS5kYXVtY2RuLm5ldC9sb2NhbGltZy9sb2NhbGltYWdlcy8wNy9tYXBhcGlkb2MvbWFya2VyU3Rhci5wbmciOw0KICAgICAgICAgICAgICB2YXIgaW1hZ2VTaXplID0gbmV3IGtha2FvLm1hcHMuU2l6ZSgyNCwgMzUpOw0KICAgICAgICAgICAgICB2YXIgbWFya2VySW1hZ2UgPSBuZXcga2FrYW8ubWFwcy5NYXJrZXJJbWFnZShpbWFnZVNyYywgaW1hZ2VTaXplKTsNCiAgICAgICAgICAgICAgLy8g6rKw6rO86rCS7Jy866GcIOuwm+ydgCDsnITsuZjrpbwg66eI7Luk66GcIO2RnOyLnO2VqeuLiOuLpA0KICAgICAgICAgICAgICB2YXIgbWFya2VyID0gbmV3IGtha2FvLm1hcHMuTWFya2VyKHsNCiAgICAgICAgICAgICAgICBtYXA6IG1hcCwNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogY29vcmRzLA0KICAgICAgICAgICAgICAgIGltYWdlOiBtYXJrZXJJbWFnZSwgLy8g66eI7Luk7J2066+47KeAIOyEpOyglQ0KICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICBtYXJrZXIuc2V0TWFwKG1hcCk7DQoNCiAgICAgICAgICAgICAgdmFyIGluZm93aW5kb3cgPSBuZXcga2FrYW8ubWFwcy5JbmZvV2luZG93KHsNCiAgICAgICAgICAgICAgICBjb250ZW50Og0KICAgICAgICAgICAgICAgICAgJzxkaXYgc3R5bGU9IndpZHRoOjE1MHB4O3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmc6NnB4IDA7Ij4nICsNCiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uc1tpbmRleF0gKw0KICAgICAgICAgICAgICAgICAgIjwvZGl2PiIsDQogICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICBpbmZvd2luZG93Lm9wZW4obWFwLCBtYXJrZXIpOw0KICAgICAgICAgICAgICAvLyDsp4Drj4TsnZgg7KSR7Ius7J2EIOqysOqzvOqwkuycvOuhnCDrsJvsnYAg7JyE7LmY66GcIOydtOuPmeyLnO2CteuLiOuLpA0KICAgICAgICAgICAgICBtYXAuc2V0Q2VudGVyKGNvb3Jkcyk7DQogICAgICAgICAgICB9DQogICAgICAgICAgfSk7DQogICAgICAgIH0pOw0KICAgICAgfQ0KICAgIH0sDQogICAgLy/rp4jsu6Trpbwg7IOd7ISx7ZWY6rOgIOyngOuPhCDsnITsl5Ag66eI7Luk66W8IO2RnOyLnO2VmOuKlCDtlajsiJjsnoXri4jri6QNCiAgICAvLyBhZGRNYXJrZXIocG9zaXRpb24sIGlkeCwgdGl0bGUpIHsNCiAgICAvLyAgIHZhciBpbWFnZVNyYyA9DQogICAgLy8gICAgICAgImh0dHBzOi8vdDEuZGF1bWNkbi5uZXQvbG9jYWxpbWcvbG9jYWxpbWFnZXMvMDcvbWFwYXBpZG9jL21hcmtlcl9udW1iZXJfYmx1ZS5wbmciLCAvLyDrp4jsu6Qg7J2066+47KeAIHVybCwg7Iqk7ZSE65287J207Yq4IOydtOuvuOyngOulvCDslIHri4jri6QNCiAgICAvLyAgICAgaW1hZ2VTaXplID0gbmV3IGtha2FvLm1hcHMuU2l6ZSgzNiwgMzcpLCAvLyDrp4jsu6Qg7J2066+47KeA7J2YIO2BrOq4sA0KICAgIC8vICAgICBpbWdPcHRpb25zID0gew0KICAgIC8vICAgICAgIHNwcml0ZVNpemU6IG5ldyBrYWthby5tYXBzLlNpemUoMzYsIDY5MSksIC8vIOyKpO2UhOudvOydtO2KuCDsnbTrr7jsp4DsnZgg7YGs6riwDQogICAgLy8gICAgICAgc3ByaXRlT3JpZ2luOiBuZXcga2FrYW8ubWFwcy5Qb2ludCgwLCBpZHggKiA0NiArIDEwKSwgLy8g7Iqk7ZSE65287J207Yq4IOydtOuvuOyngCDspJEg7IKs7Jqp7ZWgIOyYgeyXreydmCDsoozsg4Hri6gg7KKM7ZGcDQogICAgLy8gICAgICAgb2Zmc2V0OiBuZXcga2FrYW8ubWFwcy5Qb2ludCgxMywgMzcpLCAvLyDrp4jsu6Qg7KKM7ZGc7JeQIOydvOy5mOyLnO2CrCDsnbTrr7jsp4Ag64K07JeQ7ISc7J2YIOyijO2RnA0KICAgIC8vICAgICB9LA0KICAgIC8vICAgICBtYXJrZXJJbWFnZSA9IG5ldyBrYWthby5tYXBzLk1hcmtlckltYWdlKA0KICAgIC8vICAgICAgIGltYWdlU3JjLA0KICAgIC8vICAgICAgIGltYWdlU2l6ZSwNCiAgICAvLyAgICAgICBpbWdPcHRpb25zDQogICAgLy8gICAgICksDQogICAgLy8gICAgIG1hcmtlciA9IG5ldyBrYWthby5tYXBzLk1hcmtlcih7DQogICAgLy8gICAgICAgcG9zaXRpb246IHBvc2l0aW9uLCAvLyDrp4jsu6TsnZgg7JyE7LmYDQogICAgLy8gICAgICAgaW1hZ2U6IG1hcmtlckltYWdlLA0KICAgIC8vICAgICB9KTsNCg0KICAgIC8vICAgbWFya2VyLnNldE1hcChtYXApOyAvLyDsp4Drj4Qg7JyE7JeQIOuniOy7pOulvCDtkZzstpztlanri4jri6QNCiAgICAvLyAgIG1hcmtlcnMucHVzaChtYXJrZXIpOyAvLyDrsLDsl7Tsl5Ag7IOd7ISx65CcIOuniOy7pOulvCDstpTqsIDtlanri4jri6QNCg0KICAgIC8vICAgcmV0dXJuIG1hcmtlcjsNCiAgICAvLyB9LCAvLyDsp4Drj4Qg7JyE7JeQIO2RnOyLnOuQmOqzoCDsnojripQg66eI7Luk66W8IOuqqOuRkCDsoJzqsbDtlanri4jri6QNCiAgICByZW1vdmVNYXJrZXIoKSB7DQogICAgICBjb25zb2xlLmxvZygicmVtb3ZlTWFya2VyIik7DQogICAgICBjb25zb2xlLmxvZyh0aGlzLm1hcmtlcnMubGVuZ3RoKTsNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5tYXJrZXJzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIHRoaXMubWFya2Vyc1tpXS5zZXRNYXAobnVsbCk7DQogICAgICB9DQogICAgICB0aGlzLm1hcmtlcnMgPSBbXTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["HouseSearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HouseSearchBar.vue","sourceRoot":"src/components/house","sourcesContent":["<template>\r\n  <b-container class=\"bv-example-row mt-3 text-center\">\r\n    <b-row class=\"mt-4 mb-4 text-center\">\r\n      <b-col class=\"sm-3\">\r\n        <b-form-select\r\n          v-model=\"sidoCode\"\r\n          :options=\"sidos\"\r\n          @change=\"gugunList\"\r\n        ></b-form-select>\r\n      </b-col>\r\n      <b-col class=\"sm-3\">\r\n        <b-form-select\r\n          v-model=\"gugunCode\"\r\n          :options=\"guguns\"\r\n          @change=\"searchApt\"\r\n        ></b-form-select>\r\n      </b-col>\r\n      <b-col>\r\n        <b-button type=\"button\" @click=\"showHospitalList\"\r\n          >코로나 선별 진료소</b-button\r\n        >\r\n      </b-col>\r\n    </b-row>\r\n    <b-row v-if=\"showHospital\">\r\n      <hospital-list\r\n        v-bind:sidoName=\"sidoName\"\r\n        v-bind:gugunName=\"gugunName\"\r\n      ></hospital-list>\r\n    </b-row>\r\n    <br />\r\n    <b-row>\r\n      <b-col cols=\"4\" align=\"left\">\r\n        <house-list />\r\n      </b-col>\r\n      <b-col cols=\"8\">\r\n        <div id=\"map\"></div>\r\n        <div><house-detail /></div>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions, mapMutations } from \"vuex\";\r\nimport HospitalList from \"@/components/hospital/HospitalList.vue\";\r\n// import HouseMap from \"@/components/house/HouseMap.vue\";\r\nimport HouseList from \"@/components/house/HouseList.vue\";\r\nimport HouseDetail from \"@/components/house/HouseDetail.vue\";\r\nimport { houseList } from \"@/api/house.js\";\r\n\r\n/*\r\n  namespaced: true를 사용했기 때문에 선언해줍니다.\r\n  index.js 에서 modules 객체의 '키' 이름입니다.\r\n\r\n  modules: {\r\n    키: 값\r\n    memberStore: memberStore,\r\n    houseStore: houseStore\r\n  }  \r\n*/\r\nconst houseStore = \"houseStore\";\r\nvar map;\r\n//var marker;\r\n//var markers = [];\r\n\r\nexport default {\r\n  name: \"HouseSearchBar\",\r\n  components: {\r\n    HospitalList,\r\n    // HouseMap,\r\n    HouseList,\r\n    HouseDetail,\r\n  },\r\n  data() {\r\n    return {\r\n      sidoCode: null,\r\n      sidoName: null,\r\n      gugunCode: null,\r\n      gugunName: null,\r\n      showHospital: false,\r\n      //houses: [],\r\n      //dongCode: null,\r\n      markers: [],\r\n      // map에서 쓸 안자른 이름\r\n      sidoName2: null,\r\n      //gugunName2: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(houseStore, [\"sidos\", \"guguns\", \"houses\"]),\r\n    // sidos() {\r\n    //   return this.$store.state.sidos;\r\n    // },\r\n  },\r\n  created() {\r\n    // this.$store.dispatch(\"getSido\");\r\n    // this.sidoList();\r\n    this.CLEAR_SIDO_LIST();\r\n    this.getSido();\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0&libraries=services\";\r\n\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(houseStore, [\r\n      \"getSido\",\r\n      \"getGugun\",\r\n      \"getHouseList\",\r\n      \"setMarker\",\r\n    ]),\r\n    ...mapMutations(houseStore, [\r\n      \"CLEAR_SIDO_LIST\",\r\n      \"CLEAR_GUGUN_LIST\",\r\n      \"CLEAR_DETAIL_HOUSE\",\r\n      \"CLEAR_HOUSE_LIST\",\r\n      \"SET_HOUSE_LIST\",\r\n    ]),\r\n    // sidoList() {\r\n    //   this.getSido();\r\n    // },\r\n    gugunList() {\r\n      // console.log(this.sidoCode);\r\n      this.CLEAR_GUGUN_LIST();\r\n      this.gugunCode = null;\r\n      this.getSidoName();\r\n      console.log(this.sidoName);\r\n\r\n      if (this.sidoCode) {\r\n        this.getGugun(this.sidoCode);\r\n      }\r\n    },\r\n    searchApt() {\r\n      this.showHospital = false;\r\n      this.getGugunName();\r\n      console.log(this.gugunName);\r\n\r\n      if (this.gugunCode) {\r\n        //console.log(\"gugunCode -> \" + this.gugunCode);\r\n        this.getHouseList(this.gugunCode);\r\n        console.log(\"houses \");\r\n        console.log(this.houses);\r\n        this.getHouseList1(this.gugunCode);\r\n      }\r\n    },\r\n    showHospitalList() {\r\n      if (this.sidoName != null && this.gugunName != null) {\r\n        this.showHospital = !this.showHospital;\r\n      } else {\r\n        alert(\"지역을 선택하세요\");\r\n      }\r\n    },\r\n    getSidoName() {\r\n      this.sidos.forEach((sido) => {\r\n        if (sido.value === this.sidoCode) {\r\n          this.sidoName = sido.text.substring(0, 2);\r\n          this.sidoName2 = sido.text;\r\n        }\r\n      });\r\n    },\r\n    getGugunName() {\r\n      this.guguns.forEach((gugun) => {\r\n        if (gugun.value === this.gugunCode) {\r\n          this.gugunName = gugun.text;\r\n        }\r\n      });\r\n    },\r\n    initMap() {\r\n      const mapContainer = document.getElementById(\"map\");\r\n      const mapOption = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 5,\r\n      };\r\n\r\n      map = new kakao.maps.Map(mapContainer, mapOption);\r\n    },\r\n    changeSize(size) {\r\n      const container = document.getElementById(\"map\");\r\n      container.style.width = `${size}px`;\r\n      container.style.height = `${size}px`;\r\n      map.relayout();\r\n    },\r\n    getHouseList1(gugunCode) {\r\n      // vue cli enviroment variables 검색\r\n      //.env.local file 생성.\r\n      // 반드시 VUE_APP으로 시작해야 한다.\r\n      const SERVICE_KEY = process.env.VUE_APP_APT_DEAL_API_KEY;\r\n      //   const SERVICE_KEY =\r\n      //     \"9Xo0vlglWcOBGUDxH8PPbuKnlBwbWU6aO7%2Bk3FV4baF9GXok1yxIEF%2BIwr2%2B%2F%2F4oVLT8bekKU%2Bk9ztkJO0wsBw%3D%3D\";\r\n      const params = {\r\n        LAWD_CD: gugunCode,\r\n        DEAL_YMD: \"202110\",\r\n        serviceKey: decodeURIComponent(SERVICE_KEY),\r\n        pageNo: encodeURIComponent(\"1\"),\r\n        numOfRows: encodeURIComponent(\"100\"),\r\n      };\r\n      houseList(\r\n        params,\r\n        (response) => {\r\n          // console.log(response.data.response.body.items.item);\r\n          this.houses = response.data.response.body.items.item;\r\n          this.SET_HOUSE_LIST(this.houses);\r\n          this.displayMarker(this.houses);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n    //검색 결과 목록과 마커를 표출하는 함수입니다\r\n    async displayMarker(houses) {\r\n      // if (this.markers.length > 0) {\r\n      //   this.markers.forEach((marker) => marker.setMap(null));\r\n      // }\r\n\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      this.removeMarker();\r\n\r\n      // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n      // var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n      var positions = [];\r\n\r\n      await houses.forEach((house) => {\r\n        console.log(\"forEach->house\");\r\n        console.log(house);\r\n        const sido = this.sidoName2;\r\n        // const sido = this.sidoName;\r\n        console.log(sido);\r\n        //const gugun = this.gugunName;\r\n        //const dong = house.법정동;\r\n        const street = house.도로명;\r\n        const jibun = house.도로명건물본번호코드;\r\n\r\n        const addr = sido + \" \" + street + \" \" + jibun;\r\n        // const addr = sido + \" \" + gugun + dong + \" \" + jibun;\r\n        //console.log(addr);\r\n\r\n        positions.push(addr);\r\n      });\r\n\r\n      console.log(positions);\r\n\r\n      // 주소 -> 좌표 변환 라이브러리\r\n      var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n      if (positions.length > 0) {\r\n        positions.forEach(function (addr, index) {\r\n          geocoder.addressSearch(addr, function (result, status) {\r\n            //console.log(result);\r\n            console.log(status);\r\n\r\n            // 정상적으로 검색이 완료됐으면\r\n            if (status === kakao.maps.services.Status.OK) {\r\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n              var imageSrc =\r\n                \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\";\r\n              var imageSize = new kakao.maps.Size(24, 35);\r\n              var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n              // 결과값으로 받은 위치를 마커로 표시합니다\r\n              var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords,\r\n                image: markerImage, // 마커이미지 설정\r\n              });\r\n\r\n              marker.setMap(map);\r\n\r\n              var infowindow = new kakao.maps.InfoWindow({\r\n                content:\r\n                  '<div style=\"width:150px;text-align:center;padding:6px 0;\">' +\r\n                  positions[index] +\r\n                  \"</div>\",\r\n              });\r\n              infowindow.open(map, marker);\r\n              // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n              map.setCenter(coords);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    //마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    // addMarker(position, idx, title) {\r\n    //   var imageSrc =\r\n    //       \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n    //     imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n    //     imgOptions = {\r\n    //       spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n    //       spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n    //       offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n    //     },\r\n    //     markerImage = new kakao.maps.MarkerImage(\r\n    //       imageSrc,\r\n    //       imageSize,\r\n    //       imgOptions\r\n    //     ),\r\n    //     marker = new kakao.maps.Marker({\r\n    //       position: position, // 마커의 위치\r\n    //       image: markerImage,\r\n    //     });\r\n\r\n    //   marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n    //   markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n\r\n    //   return marker;\r\n    // }, // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    removeMarker() {\r\n      console.log(\"removeMarker\");\r\n      console.log(this.markers.length);\r\n      for (var i = 0; i < this.markers.length; i++) {\r\n        this.markers[i].setMap(null);\r\n      }\r\n      this.markers = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]}]}